#,Register Address,Register Name,Default Value,R/W Property,Register Description
#,addr = 0x0000,CDMAControl,,,
,[31:24],IRQDelay,8'h00,r/w,Interrupt Delay Timeout. This value is used for setting
,,,,,the interrupt delay timeout value. The interrupt timeout
,,,,,is a mechanism for causing the CDMA engine to generate
,,,,,an interrupt after the delay time period has expired.
,,,,,Timer begins counting at the end of a packet and resets
,,,,,with the receipt of a new packet or a timeout event
,,,,,occurs
,[23:16],IRQThreshold,8'h01,r/w,Interrupt Threshold. This value is used for setting the
,,,,,"interrupt threshold. When IOC interrupt events occur, an"
,,,,,internal counter counts down from the Interrupt
,,,,,"Threshold setting. When the count reaches zero, an"
,,,,,interrupt out is generated by the DMA engine
,15,Reserved,1'h0,ro,Writing to this bit has no effect and it is always read as
,,,,,zeros
,14,Err_IrqEn,1'h0,r/w,"Error Interrupt Enable. When set to 1, it allows the"
,,,,,CDMASR.Err_Irq to generate an interrupt out.
,,,,,0 = Error Interrupt disabled
,,,,,1 = Error Interrupt enabled
,13,Dly_IrqEn,1'h0,r/w,"Delay Timer Interrupt Enable. When set to 1, it allows"
,,,,,CDMASR.Dly_Irq to generate an interrupt out. This is only
,,,,,used with Scatter Gather assisted transfers.
,,,,,0 = Delay Interrupt disabled
,,,,,1 = Delay Interrupt enabled
,12,IOC_IrqEn,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows"
,,,,,CDMASR.IOC_Irq to generate an interrupt out for
,,,,,completed DMA transfers.
,,,,,0 = IOC Interrupt disabled
,,,,,1 = IOC Interrupt enabled
,[11:7],Reserved,5'h00,ro,Writing to these bits has no effect and they are always
,,,,,read as zeros
,6,Cyclic_BD_Enable,1'h0,r/w,"When set to 1, you can use the CDMA in Cyclic Buffer"
,,,,,Descriptor (BD) mode without any user intervention. In
,,,,,"this mode, the Scatter Gather module ignores the"
,,,,,"Completed bit of the BD. With this feature, you can use"
,,,,,the same BDs in cyclic manner without worrying about
,,,,,any errors.
,,,,,This bit should be set before updating the TAILDESC
,,,,,register. Changing this bit while the transfer is in progress
,,,,,will generate undefined results
,5,Key_Hole_Write,1'h0,r/w,Writing 1 to this enables the keyhole write (FIXED address
,,,,,AXI transaction). This value should not be changed when
,,,,,a transfer is in progress. This value should remain
,,,,,constant until all the descriptors are processed (for SG =
,,,,,1). CDMA shows unexpected behavior if this value is
,,,,,changed in the middle of a transfer. It is the responsibility
,,,,,of the slave device to enforce the functionality. When
,,,,,"enabling Key Hole operation, the MAX BURST LENGTH"
,,,,,should be set to 16
,4,Key_Hole_Read,1'h0,r/w,Writing 1 to this enables the keyhole read (FIXED address
,,,,,AXI transaction). This value should not be changed when
,,,,,a transfer is in progress. This value should remain
,,,,,constant until all the descriptors are processed (for SG =
,,,,,1). CDMA shows unexpected behavior if this value is
,,,,,changed in the middle of a transfer. It is the responsibility
,,,,,of the slave device to enforce the functionality. When
,,,,,"enabling Key Hole operation, the MAX BURST LENGTH"
,,,,,should be set to 16
,3,SGMode,1'h0,r/w,This bit controls the transfer mode of the CDMA. Setting
,,,,,this bit to a 1 causes the AXI CDMA to operate in a Scatter
,,,,,Gather mode if the Scatter Gather engine is included.
,,,,,0 = Simple DMA Mode
,,,,,1 = Scatter Gather Mode
,,,,,This bit must only be changed when the CDMA engine is
,,,,,idle (CDMASR.IDLE = 1). Changing the state of this bit at
,,,,,any other time has undefined results.
,,,,,This bit must be set to a 0 then back to 1 by the software
,,,,,application to force the CDMA SG engine to use a new
,,,,,value written to the CURDESC_PNTR register.
,,,,,This bit must be set prior to setting the
,,,,,"CDMACR.Dly_IrqEn bit. Otherwise, the"
,,,,,CDMACR.Dly_IrqEn bit does not get set
,2,Reset,1'h0,r/w,Soft reset control for the AXI CDMA core. Setting this bit
,,,,,to a 1 causes the AXI CDMA to be reset. Reset is
,,,,,accomplished gracefully. Committed AXI4 transfers are
,,,,,then completed. Other queued transfers are flushed.
,,,,,"After completion of a soft reset, all registers and bits are"
,,,,,in the Reset State.
,,,,,0 = Reset NOT in progress - Normal operation
,,,,,1 = Reset in progress
,1,TailPntrEn,1'h1,ro,Indicates tail pointer mode is enabled in the SG Engine.
,,,,,This bit is fixed to 1 and always read as 1 when SG is
,,,,,included. If the CDMA is built with SG disabled (Simple
,,,,,"Mode Only), the default value of the port is 0"
,0,Reserved,1'h0,ro,"Writing to these bits has no effect, and they are always"
#,addr = 0x0004,CDMAStatus,,,
,[31:24],IRQDelaySts,8'h00,ro,Interrupt Delay Time Status. This field reflects
,,,,,the current interrupt delay timer value in the SG
,,,,,Engine
,[23:16],IRQThresholdSts,8'h01,ro,Interrupt Threshold Status. This field reflects
,,,,,the current interrupt threshold value in the SG
,,,,,Engine
,15,Reserved,1'h0,ro,Always read as zero.
,14,Err_Irq,1'h0,r/w,"Interrupt on Error. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,due to an error condition. If the corresponding
,,,,,"enable bit is set (CDMACR.Err_IrqEn = 1), an"
,,,,,interrupt out is generated from the AXI CDMA.
,,,,,0 = No error Interrupt
,,,,,1 = Error interrupt active
,,,,,Writing a 1 to this bit will clear it
,13,Dly_Irq,1'h0,r/w,"Interrupt on Delay. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on a delay timer timeout. If the corresponding
,,,,,"enable bit is set (CDMACR.Dly_IrqEn = 1), an"
,,,,,interrupt out is generated from the AXI CDMA.
,,,,,0 = No Delay Interrupt
,,,,,1 = Delay Interrupt active
,,,,,Writing a 1 to this bit will clear it.
,,,,,This bit is cleared whenever CDMACR.SGMode
,,,,,is set to 0
,12,IOC_Irq,1'h0,r/w,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA transfer (either a
,,,,,Simple or SG). If the corresponding enable bit is
,,,,,"set (CDMACR.IOC_IrqEn = 1), an interrupt out is"
,,,,,generated from the AXI CDMA.
,,,,,0 = No IOC Interrupt
,,,,,1 = IOC Interrupt active
,,,,,"When operating in SG mode, the criteria"
,,,,,specified by the interrupt threshold must also
,,,,,be met. Writing a 1 to this bit will clear it.
,11,Reserved,1'h0,ro,Writing to this bit has no effect and it is always
,,,,,read as zeros.
,10,SGDecErr,1'h0,ro,Scatter Gather Decode Error. This bit indicates
,,,,,that an AXI decode error has been received by
,,,,,the SG Engine during an AXI transfer (transfer
,,,,,descriptor read or write). This error occurs if the
,,,,,SG Engine issues an address request to an
,,,,,invalid location. This error condition causes the
,,,,,AXI CDMA to gracefully halt. The CDMASR.IDLE
,,,,,bit is set to 1 when the CDMA has completed
,,,,,shut down. The CURDESC_PNTR register is
,,,,,updated with the descriptor pointer value when
,,,,,this error is detected.
,,,,,0 = No SG Decode Errors
,,,,,1 = SG Decode Error detected. CDMA Engine
,,,,,halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,9,SGSlvErr,1'h0,ro,Scatter Gather Slave Error. This bit indicates
,,,,,that an AXI slave error response has been
,,,,,received by the SG Engine during an AXI transfer
,,,,,(transfer descriptor read or write). This error
,,,,,condition causes the AXI CDMA to halt
,,,,,gracefully. The CDMASR.IDLE bit is set to 1 when
,,,,,the CDMA has completed shut down. The
,,,,,CURDESC_PNTR register is updated with the
,,,,,descriptor pointer value when this error is
,,,,,detected.
,,,,,0 = No SG Slave Errors
,,,,,1 = SG Slave Error detected. CDMA Engine halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,8,SGIntErr,1'h0,ro,Scatter Gather Internal Error. This bit indicates
,,,,,that an internal error has been encountered by
,,,,,the SG Engine. This error condition causes the
,,,,,AXI CDMA to halt gracefully. The CDMASR.IDLE
,,,,,bit is set to 1 when the CDMA has completed
,,,,,shutdown. The CURDESC_PNTR register is
,,,,,updated with the descriptor pointer value when
,,,,,this error is detected.
,,,,,0 = No SG Internal Errors
,,,,,1 = SG Internal Error detected. CDMA Engine
,,,,,halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,7,Reserved,1'h0,ro,Writing to this bit has no effect and it is always
,,,,,read as zeros.
,6,DMADecErr,1'h0,ro,DMA Decode Error. This bit indicates that an
,,,,,AXI decode error has been received by the AXI
,,,,,DataMover. This error occurs if the DataMover
,,,,,issues an address request to an invalid location.
,,,,,This error condition causes the AXI CDMA to
,,,,,halt gracefully. The CDMASR.IDLE bit is set to 1
,,,,,when the CDMA has completed shut down. The
,,,,,CURDESC_PNTR register is updated with the
,,,,,descriptor pointer value when this error is
,,,,,detected.
,,,,,0 = No CDMA Decode Errors.
,,,,,1 = CDMA Decode Error detected. CDMA Engine
,,,,,halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,5,DMASlvErr,1'h0,ro,DMA Slave Error. This bit indicates that an AXI
,,,,,slave error response has been received by the
,,,,,AXI DataMover during an AXI transfer (read or
,,,,,write). This error condition causes the AXI
,,,,,CDMA to halt gracefully. The CDMASR.IDLE bit
,,,,,is set to 1 when the CDMA has completed shut
,,,,,down. The CURDESC_PNTR register is updated
,,,,,with the descriptor pointer value when this error
,,,,,is detected.
,,,,,0 = No CDMA Slave Errors.
,,,,,1 = CDMA Slave Error detected. CDMA Engine
,,,,,halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,4,DMAIntErr,1'h0,ro,DMA Internal Error. This bit indicates that a
,,,,,internal error has been encountered by the
,,,,,DataMover on the data transport channel. This
,,,,,error can occur if a 0 value BTT (bytes to
,,,,,transfer) is fed to the AXI DataMover or
,,,,,DataMover has an internal processing error. A
,,,,,BTT of 0 only happens if the BTT register is
,,,,,written with zeros (in Simple DMA mode) or a
,,,,,BTT specified in the Control word of a fetched
,,,,,descriptor is set to 0 (SG Mode). This error
,,,,,condition causes the AXI CDMA to halt
,,,,,gracefully. The CDMASR.IDLE bit is set to 1 when
,,,,,the CDMA has completed shut down.
,,,,,CURDESC_PNTR register is updated with the
,,,,,descriptor pointer value when this error is
,,,,,detected.
,,,,,0 = No CDMA Internal Errors.
,,,,,1 = CDMA Internal Error detected. CDMA Engine
,,,,,halts.
,,,,,A reset (soft or hard) must be issued to clear the
,,,,,error condition.
,3,SGIncld,1'h0,ro,SG Included. This bit indicates if the AXI CDMA
,,,,,has been implemented with Scatter Gather
,,,,,support included. This is used by application
,,,,,software (drivers) to determine if SG Mode can
,,,,,be utilized.
,,,,,0 = Scatter Gather not included. Only Simple
,,,,,DMA operations are supported.
,,,,,1 = Scatter Gather is included. Both Simple DMA
,,,,,and Scatter Gather operations are supported.
,2,Reserved,1'h0,ro,Writing to these bits has no effect and they are
,,,,,always read as zeros.
,1,Idle,1'h0,ro,CDMA Idle. Indicates the state of AXI CDMA
,,,,,operations.
,,,,,"When set and in Simple DMA mode, the bit"
,,,,,indicates the programmed transfer has
,,,,,completed and the CDMA is waiting for a new
,,,,,transfer to be programmed. Writing to the bytes
,,,,,to transfer (BTT) register in Simple DMA mode
,,,,,causes the CDMA to start (not Idle).
,,,,,"When set and in SG mode, the bit indicates the"
,,,,,SG Engine has reached the tail pointer for the
,,,,,associated channel and all queued descriptors
,,,,,have been processed. Writing to the tail pointer
,,,,,register automatically restarts CDMA SG
,,,,,operations.
,,,,,0 = Not Idle - Simple or SG DMA operations are
,,,,,in progress.
,,,,,1 = Idle - Simple or SG operations completed or
,,,,,not started.
,0,Reserved,1'h0,ro,Writing to these bits has no effect and they are
,,,,,always read as zeros.
#,addr = 0x0008,CDMACurDescPntr,,,
,[31:6],Cur_Desc_Pntr,26'h0,r/w,Current Descriptor Pointer. Indicates the pointer of the
,,,,,current descriptor being worked on. This register must
,,,,,contain a pointer to a valid descriptor prior to writing to
,,,,,the TAILDESC_PTR register. Failure to do so results in an
,,,,,undefined operation by the CDMA.
,,,,,When the CDMA SG Engine is running (CDMASR.IDLE =
,,,,,"0), the CURDESC_PNTR register is updated by the SG"
,,,,,Engine to reflect the starting address of the current
,,,,,descriptor being executed.
,,,,,"On error detection, the CURDESC_PNTR register is"
,,,,,updated to reflect the descriptor associated with the
,,,,,detected error.
,,,,,The register should only be written by the software
,,,,,application when the AXI CDMA is idle (CDMASR.IDLE =
,,,,,1). Descriptor addresses written to this field must be
,,,,,aligned to 64-byte boundaries (sixteen 32-bit words).
,,,,,"Examples are 0x00, 0x40, 0x80. For 64byte alignment bits"
,,,,,[5:0] should be 0. Any other alignment has undefined
,,,,,results.
,,,,,This register is cleared when CDMACR.SGMode = 0.
,[5:0],Reserved,6'h0,ro,Writing to these bits has no effect and they are always
,,,,,read as zeros.
#,addr = 0x000c,CDMACurDescPntrMSB,,,
,[31:0,Cur_Desc_Pntr,32'h0,r/w,Current Descriptor Pointer. Indicates the pointer of the
,,,,,current descriptor being worked on. This register must
,,,,,contain a pointer to a valid descriptor prior to writing to
,,,,,the TAILDESC_PTR register. Failure to do so results in an
,,,,,undefined operation by the CDMA.
,,,,,When the CDMA SG Engine is running (CDMASR.IDLE =
,,,,,"0), the CURDESC_PNTR register is updated by the SG"
,,,,,Engine to reflect the starting address of the current
,,,,,descriptor being executed.
,,,,,"On error detection, the CURDESC_PNTR register is"
,,,,,updated to reflect the descriptor associated with the
,,,,,detected error.
,,,,,The register should only be written by the software
,,,,,application when the AXI CDMA is idle (CDMASR.IDLE =
,,,,,1). Descriptor addresses written to this field must be
,,,,,aligned to 64-byte boundaries (sixteen 32-bit words).
,,,,,"Examples are 0x00, 0x40, 0x80. Any other alignment has"
,,,,,undefined results.
,,,,,This register is cleared when CDMACR.SGMode = 0.
#,addr = 0x0010,CDMATailDescPntr,,,
,[31:6],Tail_Desc_Pntr,26'h0,r/w,Tail Descriptor Pointer. Indicates pause pointer for
,,,,,descriptor chain execution. The AXI CDMA SG
,,,,,Engine pauses descriptor fetching after completing
,,,,,operations on the descriptor whose current
,,,,,descriptor pointer matches the tail descriptor
,,,,,"pointer. Like Current descriptor, this too shall be"
,,,,,64byte aligned.
,,,,,When the AXI CDMA is in SG Mode and the address
,,,,,"space is 32 bits (CDMACR.SGMode = 1), a write by"
,,,,,the software application to the TAILDESC_PNTR (in
,,,,,case of 32 bit mode) register causes the AXI CDMA
,,,,,SG Engine to start fetching descriptors starting from
,,,,,the CURDESC_PNTR register value. If the SG engine
,,,,,"is paused at a tail pointer pause point, the SG engine"
,,,,,restarts descriptor execution at the next sequential
,,,,,transfer descriptor. If the AXI CDMA is not idle
,,,,,"(CDMASR.IDLE = 0), writing to the TAILDESC_PNTR"
,,,,,has no effect except to reposition the SG pause
,,,,,point.
,,,,,This register is cleared when CDMACR.SGMode = 0.
,[5:0],Reserved,6'h0,ro,Writing to these bits has no effect and they are always
,,,,,read as zeros.
#,addr = 0x0014,CDMATailDescPntrMSB,,,
,[31:0],Tail_Desc_Pntr,32'h0,r/w,Tail Descriptor Pointer. Indicates pause pointer for
,,,,,descriptor chain execution. The AXI CDMA SG
,,,,,Engine pauses descriptor fetching after completing
,,,,,operations on the descriptor whose current
,,,,,descriptor pointer matches the tail descriptor
,,,,,pointer.
,,,,,"When the AXI CDMA is in SG Mode, and the address"
,,,,,"space is more than 32 bits, (CDMACR.SGMode = 1),"
,,,,,a write by the software application to the
,,,,,TAILDESC_PNTR_MSB (in 64 bit mode) register
,,,,,causes the AXI CDMA SG Engine to start fetching
,,,,,descriptors starting from the CURDESC_PNTR
,,,,,register value. If the SG engine is paused at a tail
,,,,,"pointer pause point, the SG engine restarts"
,,,,,descriptor execution at the next sequential transfer
,,,,,descriptor. If the AXI CDMA is not idle
,,,,,"(CDMASR.IDLE = 0), writing to the TAILDESC_PNTR"
,,,,,has no effect except to reposition the SG pause
,,,,,point.
,,,,,This register is cleared when CDMACR.SGMode = 0.
#,addr = 0x0018,CDMASA,,,
,[31:0],Source_Address,32'h0,r/w,Source Address Register. This register is used by Simple
,,,,,DMA operations (CDMACR.SGMode = 0) as the starting read
,,,,,address for DMA data transfers.
,,,,,The software application should only write to this register
,,,,,when the AXI CDMA is idle (CDMASR.IDLE = 1).
#,addr = 0x001c,CDMASAMSB,,,
,[31:0],Source_Address,32'h0,r/w,Source Address Register. This register is used by Simple
,,,,,DMA operations (CDMACR.SGMode = 0) as the starting read
,,,,,address for DMA data transfers. The address value written
,,,,,can be at any byte offset.
,,,,,The software application should only write to this register
,,,,,when the AXI CDMA is idle (CDMASR.IDLE = 1).
#,addr = 0x0020,CDMADA,,,
,[31:0],Destination_Address,32'h0,ro,Destination Address Register. This register is used by
,,,,,Simple DMA operations as the starting write address for
,,,,,DMA data transfers. The address value written has
,,,,,restrictions relative to the Source Address and Data
,,,,,Realignment Engine (DRE) inclusion as follows.
,,,,,"If DRE is not included in the AXI CDMA, then the address"
,,,,,offset of the Destination address must match that of the
,,,,,Source Address register value. Offset is defined as that
,,,,,portion of a system address that is used to designate a byte
,,,,,"position within a single data beat width. For example, a"
,,,,,32-bit data bus has four addressable byte positions within a
,,,,,"single data beat (0, 1, 2, and 3). The portion of the address"
,,,,,that designates these positions is the offset. The number of
,,,,,address bits used for the offset varies with the transfer bus
,,,,,data width.
,,,,,The software application should only write to this register
,,,,,when the AXI CDMA is idle (CDMASR.IDLE = 1).
#,addr = 0x0024,CDMADAMSB,,,
,[31:0],Destination_Address,32'h0,ro,Destination Address Register. This register is used by
,,,,,Simple DMA operations as the starting write address for
,,,,,DMA data transfers. The software application should only
,,,,,write to this register when the AXI CDMA is idle
,,,,,(CDMASR.IDLE = 1).
#,addr = 0x0028,CDMABTT,,,
,[31:26],Reserved,6'h0,ro,"Writing to these bits has no effect, and they are always"
,,,,,read as zeros.
,[25:0],Bytes_To_Transfer,26'h0,r/w,Bytes to Transfer. This register field is used for Simple
,,,,,DMA transfers and indicates the desired number of bytes
,,,,,to DMA from the Source Address to the Destination
,,,,,"Address. A maximum of 67,108,863 bytes of data can be"
,,,,,specified by this field for the associated transfer.
,,,,,Writing to the BTT register also initiates the Simple DMA
,,,,,transfer.
#,addr = 0x002c,CDMARSV,,,
,[31:0],Reserved,32'h0,ro,Reserved for CDMA register
#,addr = 0x0030,MAINCFG,,,
,[31:9],Reserved,23'h0,ro,Reserved
,8,dma_en,1'h0,r/w,1'b1 : Enable DMA engine.
,,,,,Writing 1'b0 to this bit will pause DMA engine.
,[7:0],ch_int_en,8'h0,r/w,Writing 1'b1 to these bit will enable interrupt generation for each channel.
,,,,,[0] : Interrupt enable for channel 0.
,,,,,[1] : Interrupt enable for channel 1.
,,,,,[2] : Interrupt enable for channel 2.
,,,,,[3] : Interrupt enable for channel 3.
,,,,,[4] : Interrupt enable for channel 4.
,,,,,[5] : Interrupt enable for channel 5.
,,,,,[6] : Interrupt enable for channel 6.
,,,,,[7] : Interrupt enable for channel 7.
#,addr = 0x0034,MAINDMASTT,,,
,[31:9],Reserved,23'h0,ro,Reserved
,8,dma_busy,1'h0,ro,1'b1 : DMA engine is busy.
,[7:0],ch_int_en,8'h0,ro,[0] : Interrupt source of channel 0.
,,,,,[1] : Interrupt source of channel 1.
,,,,,[2] : Interrupt source of channel 2.
,,,,,[3] : Interrupt source of channel 3.
,,,,,[4] : Interrupt source of channel 4.
,,,,,[5] : Interrupt source of channel 5.
,,,,,[6] : IInterrupt source of channel 6.
,,,,,[7] : Interrupt source of channel 7.
#,addr = 0x0038,MAINRSV0,,,
,[31:0],Reserved,32'h0,ro,Reserved
#,addr = 0x003c,MAINRSV1,,,
,[31:0],Reserved,32'h0,ro,Reserved
#,addr = 0x0040,CRCH0,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x0044,SRCH0,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x0048,TSRCH0,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x004c,CDPRCH0,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x0050,SARCH0,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0054,DARCH0,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0060,CRCH1,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x0064,SRCH1,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x0068,TSRCH1,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x006c,CDPRCH1,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x0070,SARCH1,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0074,DARCH1,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0080,CRCH2,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x0084,SRCH2,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x0088,TSRCH2,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x008c,CDPRCH2,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x0090,SARCH2,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0094,DARCH2,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00a0,CRCH3,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x00a4,SRCH3,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x00a8,TSRCH3,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x00ac,CDPRCH3,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x00b0,SARCH3,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00b4,DARCH3,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00a0,CRCH4,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x00a4,SRCH4,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x00a8,TSRCH4,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x00ac,CDPRCH4,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x00b0,SARCH4,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00b4,DARCH4,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00c0,CRCH5,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Idle
,,,,,1'b0 : busy.
#,addr = 0x00c4,SRCH5,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x00c8,TSRCH5,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x00cc,CDPRCH5,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x00d0,SARCH5,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00d4,DARCH5,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00e0,CRCH6,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x00e4,SRCH6,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x00e8,TSRCH6,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x00ec,CDPRCH6,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x00f0,SARCH6,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x00f4,DARCH6,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0100,CRCH7,,,
,[31:11],Reserved,21'h0,ro,Reserved
,10,sw_reset,1'h0,r/w,Writing 1 to reset DMA channel.
,[9:8],ch_pri,1'h0,r/w,Channel priority. 7 is highest priority.
,[7:6],mode,2'h0,r/w,00 : normal mode.
,,,,,01 : Hardware handshake mode.
,,,,,10 : Linked list mode.
,,,,,11 : Reserved.
,5,inc_des,1'h0,r/w,0: Do not increment destination address.
,,,,,1: Increment destination address.
,4,inc_src,1'h0,r/w,0: Do not increment source address.
,,,,,1: Increment source address.
,3,done_int_en,1'h0,r/w,"Complete Interrupt Enable. When set to 1, it allows the"
,,,,,channle to generate an interrupt when the transfer is done.
,2,stop_err_int_en,1'h0,r/w,"Stop Error interrupt enable. When set to 1, it allows the"
,,,,,channel to generate an Stop Error interrupt.
,1,wtt_err_int_en,1'h0,r/w,Words to transfer error interrupt enable.
,,,,,"When set to 1, it allows the channel to generate an interrupt "
,,,,,if number of transferred words are zero.
,0,ch_en,1'h0,r/w,Channel enabled.
,,,,,1'b1 : Enable.
,,,,,1'b0 : Disable.
#,addr = 0x0104,SRCH7,,,
,[31:4],Reserved,28'h0,ro,Reserved
,3,done_irq,1'h0,ro,"Interrupt on Complete. When set to 1, this bit"
,,,,,indicates an interrupt event has been generated
,,,,,on completion of a DMA channel.If the corresponding enable 
,,,,,"bit is set (done_int_en = 1), an interrupt out is generated."
,,,,,0 = No Done Interrupt
,,,,,1 = Done Interrupt active
,,,,,Writing a 1 to this bit to clear it.
,2,stop_err,1'h0,ro,Channel DMA is stop suddenly by sw reset or disable when the transfer is on going.
,,,,,Writing a 1 to this bit to clear.
,1,wtt_err,1'h0,ro,Words to transfer error. (In case words to transfer is zero).
,,,,,Writing a 1 to this bit to clear.
,0,ch_idle,1'h0,ro,1'b1 : Idle
,,,,,1'b0 : busy.
,,,,,When set the bit indicates the programmed transfer has
,,,,,completed and the DMA channel is waiting for a new transfer to be programmed.
#,addr = 0x0108,TSRCH7,,,
,[31:8],Reserved,24'h0,ro,Reserved
,[7:0],size,8'h0,r/w,Number of word (32bit) to transfer. Maximum size is 255 words.
#,addr = 0x010c,CDPRCH7,,,
,[31:4],cur_ptr,28'h0,ro,Current Descriptor Pointer. Indicates the pointer of the
,,,,,"current descriptor being worked on. When the DMA Engine is running (idle = 0), this register is updated by the Lookup Descriptor Engine to reflect the starting address of the current descriptor being executed."
,,,,,The register should only be written by the software
,,,,,application when chanel is in idle state.
,[3:0],Reserved,4'h0,ro,Reserved
#,addr = 0x0110,SARCH7,,,
,[31:0],sa,31'h0,r/w,Source Address Register. This register is used as the starting read address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
#,addr = 0x0114,DARCH7,,,
,[31:0],da,31'h0,r/w,Destination Address Register. This register is used as the starting write address for DMA data transfers. The address value written must be aligned.
,,,,,The software application should only write to this register
,,,,,when the channel DMA is idle.
